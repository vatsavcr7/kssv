import pandas as pd
import numpy as np
dataset=pd.read_csv('framingham.csv')
dataset = dataset.drop(dataset.columns[[2, 14]], axis=1)
x = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values
from sklearn.impute import SimpleImputer
imputer = SimpleImputer(missing_values=np.nan, strategy='most_frequent')
imputer.fit(x)
x = imputer.transform(x)
from sklearn.model_selection import train_test_split
xtrain, xtest, ytrain, ytest = train_test_split(x, y, train_size=0.7, random_state=666)
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
xtrain = sc.fit_transform(xtrain)
xtest = sc.transform(xtest)
from sklearn.decomposition import PCA
pca = PCA(n_components=12)
xtrain = pca.fit_transform(xtrain)
xtest = pca.transform(xtest)
from sklearn.linear_model import LogisticRegression
lr = LogisticRegression(C=0.5, random_state=666, solver="liblinear")
lr.fit(xtrain, ytrain)
value_predict = lr.predict(xtest)
from sklearn.metrics import confusion_matrix, accuracy_score, recall_score, precision_score
print(confusion_matrix(ytest, value_predict))
print(accuracy_score(ytest, value_predict)*100)
print(recall_score(ytest, value_predict)*100)
print(precision_score(ytest, value_predict)*100)
